import { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate, useLocation, Link } from "react-router-dom";
import "../../Css/Phong/ThemPhong.css";
import { useUser } from "../../../context/UserContext";
import "../../Css/TrangChu.css";
import Header from "../../components/Header";
import Footer from "../../components/Footer";
import Breadcrumb from "../../components/Breadcrumb";

function ThemPhong() {
  const { user, loading, error, setUser } = useUser();
  const [formData, setFormData] = useState({
    tenPhong: "",
    chieuDai: "",
    chieuRong: "",
    soNguoiToiDa: "",
    tienPhong: "",
    trangThai: "Tr·ªëng",
  });

  const navigate = useNavigate();

  if (loading) return <p>ƒêang t·∫£i...</p>;
  if (error) return <p>L·ªói: {error}</p>;
  if (!user)
    return (
      <p>
        Ch∆∞a ƒëƒÉng nh·∫≠p{" "}
        <Link to="/dang-nhap">
          <button className="login-btn">ƒêƒÉng nh·∫≠p</button>
        </Link>
      </p>
    );
  const handleLogout = () => {
    localStorage.clear();
    sessionStorage.clear();
    setUser(null); // üëâ b√¢y gi·ªù h·ª£p l·ªá v√¨ ƒë√£ destructure t·ª´ hook
    navigate("/");
  };
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const requiredFields = ["ngaySinh", "soDienThoai"];
    const missingFields = requiredFields.filter((field) => !user?.[field]);

    if (missingFields.length > 0) {
      const confirmEdit = window.confirm(
        "Th√¥ng tin c√° nh√¢n c·ªßa b·∫°n ch∆∞a ƒë·∫ßy ƒë·ªß!\n" +
          "B·∫°n c·∫ßn c·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n tr∆∞·ªõc khi th√™m ph√≤ng.\n" +
          "C√≥ mu·ªën chuy·ªÉn ƒë·∫øn trang ch·ªânh s·ª≠a th√¥ng tin c√° nh√¢n kh√¥ng?"
      );

      if (confirmEdit) {
        navigate("/ttcn", { state: { forceEdit: true } });
      }
      return;
    }

    const dataToSend = {
      ...formData,
      chuTroId: user._id,
      chieuDai: parseFloat(formData.chieuDai),
      chieuRong: parseFloat(formData.chieuRong),
      soNguoiToiDa: parseInt(formData.soNguoiToiDa, 10),
      tienPhong: parseInt(formData.tienPhong, 10),
    };

    try {
      await axios.post("http://localhost:5000/api/phong", dataToSend);
      alert("Th√™m ph√≤ng th√†nh c√¥ng!");
      navigate("/chu-tro");
    } catch (err) {
      console.error(
        "‚ùå L·ªói khi th√™m ph√≤ng:",
        err.response?.data || err.message
      );
      alert(
        "L·ªói khi th√™m ph√≤ng: " + (err.response?.data?.error || err.message)
      );
    }
  };

  return (
    <div className="dashboard-container">
      <Header user={user} onLogout={handleLogout} />
      <div className="main-content">
        <div className="main">
          <Breadcrumb
            paths={[{ label: "Trang ch·ªß", to: "/" }, { label: "Th√™m ph√≤ng" }]}
          />
        </div>
        <div className="add-room-form">
          <h2>Th√™m ph√≤ng m·ªõi</h2>
          <form onSubmit={handleSubmit}>
            <label>T√™n ph√≤ng</label>
            <input
              type="text"
              name="tenPhong"
              onChange={handleChange}
              required
            />

            <label>Chi·ªÅu d√†i (m)</label>
            <input
              type="number"
              name="chieuDai"
              step="0.1"
              onChange={handleChange}
              required
            />

            <label>Chi·ªÅu r·ªông (m)</label>
            <input
              type="number"
              name="chieuRong"
              step="0.1"
              onChange={handleChange}
              required
            />

            <label>S·ªë ng∆∞·ªùi ·ªü t·ªëi ƒëa</label>
            <input
              type="number"
              name="soNguoiToiDa"
              onChange={handleChange}
              required
            />

            <label>Ti·ªÅn ph√≤ng (VND)</label>

            <input
              type="number"
              name="tienPhong"
              onChange={handleChange}
              required
            />
            <span>L∆∞u √Ω: kh√¥ng nh·∫≠p d·∫•u "," v√† "."</span>
            <label>Tr·∫°ng th√°i</label>
            <select name="trangThai" onChange={handleChange}>
              <option value="Tr·ªëng">Tr·ªëng</option>
              <option value="ƒê√£ thu√™">ƒê√£ thu√™</option>
              <option value="B·∫£o tr√¨">B·∫£o tr√¨</option>
            </select>

            <button type="submit">L∆∞u</button>
          </form>
        </div>
        <Footer />
      </div>
    </div>
  );
}

export default ThemPhong;
